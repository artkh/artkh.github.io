{"version":3,"sources":["components/elements/form/FormsControl.module.scss","components/utilites/validatorsForm/validators.js","components/elements/form/FormsControl.jsx","components/Dialogs/Dialogs.module.scss","components/Dialogs/Message/Message.module.scss","components/Dialogs/DIalogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","redux/dialogs-selector.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","required","value","undefined","maxLength","max","length","maxLength15","maxLength30","Textarea","input","meta","props","hasError","touched","error","className","s","formsControl","Input","DialogItem","name","to","id","Message","message","class","user_info","image","src","img","alt","user_message","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","type","Dialogs","dialogsElement","dialogsData","map","d","messagesElements","messagesData","m","style","dialogs","dialogs_inner","user_item","messages","newMessage","dataForm","sendMessage","getDialogsData","state","dialogsPage","getMessagesData","compose","connect","dispatch","sendMessageActionCreator","reset","withAuthRedirect"],"mappings":"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","file":"static/js/5.09064b75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formsControl\":\"FormsControl_formsControl__1YovJ\",\"error\":\"FormsControl_error__Uj8n-\",\"errorMessage\":\"FormsControl_errorMessage__13xgY\"};","export const required = value => {\r\n    return value ? undefined : 'Required';\r\n}\r\n\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nexport const maxLength15 = maxLength(15);\r\nexport const maxLength30 = maxLength(30);","import React from 'react';\r\nimport s from './FormsControl.module.scss';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  \r\n  let hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={s.formsControl + ' ' + (hasError ? s.error : '') }>\r\n      <textarea {...input} {...props} />\r\n      { hasError && <span>{meta.error}</span> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\r\n  let hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={s.formsControl + ' ' + (hasError ? s.error : '')}>\r\n      <input {...input} {...props} />\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3DTaY\",\"dialogs_inner\":\"Dialogs_dialogs_inner__1kEhe\",\"user_item\":\"Dialogs_user_item__15W4X\",\"name\":\"Dialogs_name__3ADCV\",\"messages\":\"Dialogs_messages__3AGe2\",\"newMessage\":\"Dialogs_newMessage__rSJ4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2sv9E\",\"outbox\":\"Message_outbox__7s4pK\",\"user_message\":\"Message_user_message__1ZLaS\",\"user_info\":\"Message_user_info__24_PQ\",\"image\":\"Message_image__1_0JK\",\"name\":\"Message_name__24_lT\"};","import React from 'react';\r\nimport s from './../Dialogs.module.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={s.name}>\r\n      <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.scss';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={`${s.message} Message_${props.class}__7s4pK`} id={props.id}>\r\n      <div className={s.user_info}>\r\n        <div className={s.image}>\r\n          <img src={\"\" + props.img} alt=\"\" />\r\n        </div>\r\n        <div className={s.name}>\r\n          {props.name}\r\n        </div>\r\n      </div>\r\n      <div className={s.user_message}>\r\n        {props.message}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.scss';\r\nimport DialogItem from './DIalogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../elements/form/FormsControl';\r\nimport { required, maxLength30 } from '../utilites/validatorsForm/validators';\r\n\r\nconst MessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name={'message'} component={Textarea} placeholder={'new message...'}\r\n          validate={[required, maxLength30]} />\r\n      </div>\r\n      <div>\r\n        <button type={'submit'}>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({ form: 'Message' })(MessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n  \r\n  let dialogsElement = props.dialogsData.map(d => <DialogItem name={d.name} id={d.id} /> );\r\n  let messagesElements = props.messagesData.map( m => <Message id={m.id} name={m.name} img={m.img} message={m.message} class={m.class} style={m.style} /> );\r\n\r\n  let addNewMessage = (dataForm) => {\r\n    props.sendMessage(dataForm.message);\r\n  }\r\n  \r\n  return (\r\n    <div className={s.dialogs}>\r\n      <h1>\r\n        Dialogs\r\n      </h1>\r\n      <div className={s.dialogs_inner}>\r\n        <div className={s.user_item}>\r\n          { dialogsElement }\r\n        </div>\r\n        <div className={s.messages}>\r\n          { messagesElements }\r\n        </div>\r\n        <div className={s.newMessage}>\r\n          <MessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dialogs;","export const getDialogsData = (state) => {\r\n    return state.dialogsPage.dialogsData;\r\n}\r\n\r\nexport const getMessagesData = (state) => {\r\n    return state.dialogsPage.messagesData;\r\n}","import { sendMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { reset } from 'redux-form';\r\nimport { getDialogsData, getMessagesData } from '../../redux/dialogs-selector';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsData: getDialogsData(state),\r\n    messagesData: getMessagesData(state)\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (message) => {\r\n      dispatch(sendMessageActionCreator(message));\r\n      dispatch(reset('Message'));\r\n    },\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)\r\n(Dialogs);"],"sourceRoot":""}