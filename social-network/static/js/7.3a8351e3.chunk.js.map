{"version":3,"sources":["components/elements/form/FormsControl.module.scss","components/utilites/validatorsForm/validators.js","components/elements/form/FormsControl.jsx","components/Login/Login.jsx"],"names":["module","exports","required","value","undefined","maxLength","max","length","maxLength15","maxLength30","Textarea","input","meta","props","hasError","touched","error","className","s","formsControl","Input","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","component","name","placeholder","validate","type","errorMessage","id","htmlFor","Login","dataForm","loginAuthThunk","login","password","rememberMe","this","isAuth","to","React","Component","connect","state","auth"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,aAAe,qC,iCCDvH,sGAAO,IAAMC,EAAW,SAAAC,GACpB,OAAOA,OAAQC,EAAY,YAGzBC,EAAY,SAAAC,GAAG,OAAI,SAAAH,GAAK,OAC1BA,GAASA,EAAMI,OAASD,EAAxB,kBAAyCA,EAAzC,4BAAoEF,IAC3DI,EAAcH,EAAU,IACxBI,EAAcJ,EAAU,K,oJCJxBK,EAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAEjDC,EAAWF,EAAKG,SAAWH,EAAKI,MAEpC,OACE,yBAAKC,UAAWC,IAAEC,aAAe,KAAOL,EAAWI,IAAEF,MAAQ,KAC3D,8CAAcL,EAAWE,IACvBC,GAAY,8BAAOF,EAAKI,SAKnBI,EAAQ,SAAC,GAA+B,IAA7BT,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAE9CC,EAAWF,EAAKG,SAAWH,EAAKI,MAEpC,OACE,yBAAKC,UAAWC,IAAEC,aAAe,KAAOL,EAAWI,IAAEF,MAAQ,KAC3D,2CAAWL,EAAWE,IACrBC,GAAY,8BAAOF,EAAKI,U,wNCWzBK,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAxBL,SAACT,GAEjB,OACE,0BAAMW,SAAUX,EAAMY,cACpB,6BACE,kBAAC,IAAD,CAAOC,UAAWN,IAAOO,KAAM,QAASC,YAAa,QACnDC,SAAU,CAAC3B,KAAW4B,KAAM,WAEhC,6BACE,kBAAC,IAAD,CAAOJ,UAAWN,IAAOO,KAAM,WAAYC,YAAa,WACtDC,SAAU,CAAC3B,KAAW4B,KAAM,cAE9BjB,EAAMG,MAAQ,yBAAKC,UAAWC,IAAEa,cAAelB,EAAMG,OAAe,KACtE,6BACE,kBAAC,IAAD,CAAOU,UAAW,QAASI,KAAM,WAAYH,KAAM,aAAcK,GAAI,eACrE,2BAAOC,QAAQ,cAAf,gBAEF,6BACE,4BAAQH,KAAM,UAAd,eAQKI,EAAb,2MAEEV,SAAW,SAACW,GACV,EAAKtB,MAAMuB,eAAeD,EAASE,MAAOF,EAASG,SAAUH,EAASI,aAH1E,wEAQI,OAAGC,KAAK3B,MAAM4B,OAAe,kBAAC,IAAD,CAAUC,GAAI,aAGzC,6BACE,qCACA,kBAACrB,EAAD,CAAgBG,SAAUgB,KAAKhB,gBAbvC,GAA2BmB,IAAMC,WAyBlBC,uBANO,SAACC,GACrB,MAAO,CACLL,OAAQK,EAAMC,KAAKN,UAIiB,CAAEL,oBAA3BS,CAA6CX","file":"static/js/7.3a8351e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formsControl\":\"FormsControl_formsControl__1YovJ\",\"error\":\"FormsControl_error__Uj8n-\",\"errorMessage\":\"FormsControl_errorMessage__13xgY\"};","export const required = value => {\r\n    return value ? undefined : 'Required';\r\n}\r\n\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\nexport const maxLength15 = maxLength(15);\r\nexport const maxLength30 = maxLength(30);","import React from 'react';\r\nimport s from './FormsControl.module.scss';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  \r\n  let hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={s.formsControl + ' ' + (hasError ? s.error : '') }>\r\n      <textarea {...input} {...props} />\r\n      { hasError && <span>{meta.error}</span> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\r\n  let hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={s.formsControl + ' ' + (hasError ? s.error : '')}>\r\n      <input {...input} {...props} />\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { loginAuthThunk } from '../../redux/auth-reducer';\r\nimport { Input } from '../elements/form/FormsControl';\r\nimport { required } from '../utilites/validatorsForm/validators';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from '../elements/form/FormsControl.module.scss';\r\n\r\nconst LoginForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Input} name={'login'} placeholder={'login'}\r\n          validate={[required]} type={'email'} />\r\n      </div>\r\n      <div>\r\n        <Field component={Input} name={'password'} placeholder={'password'}\r\n          validate={[required]} type={'password'} />\r\n      </div>\r\n      { props.error ? <div className={s.errorMessage}>{props.error}</div> : null }\r\n      <div>\r\n        <Field component={'input'} type={'checkbox'} name={'rememberMe'} id={'rememberMe'} />\r\n        <label htmlFor=\"rememberMe\">Remember me</label>\r\n      </div>\r\n      <div>\r\n        <button type={'submit'}>submit</button> \r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'Login' })(LoginForm);\r\n\r\nexport class Login extends React.Component {\r\n\r\n  onSubmit = (dataForm) => {\r\n    this.props.loginAuthThunk(dataForm.login, dataForm.password, dataForm.rememberMe);\r\n  }\r\n\r\n  render() {\r\n\r\n    if(this.props.isAuth) return <Redirect to={'/profile'} />\r\n\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={this.onSubmit} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { loginAuthThunk })(Login);"],"sourceRoot":""}